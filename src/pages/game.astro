---

import DressUpSetUp from "../components/game/DressUpSetUp.astro";
import MainLayout from "../layouts/MainLayout.astro"
 export const products = await fetch("https://ujeckodeljhzamhwlhsj.supabase.co/rest/v1/products",{
    method: "GET",
    headers: {
        apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVqZWNrb2RlbGpoemFtaHdsaHNqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTU1MDI3ODIsImV4cCI6MjAzMTA3ODc4Mn0.qKKBr9i_Jy2NzTfbu_jinScWs6PmGaBMoeK-1WHbmcU"
    }
  }).then((res) => res.json());

---
<MainLayout>
    <div class="navigation_container">
        <h1>Shop the look</h1>
    </div>
    <section class="flex_column">
        <div class="flex_row">
            <button id="button">Get outfit</button>
            <button id="btn_tops">Tops</button>
            <button id="btn_bottoms">Bottoms</button>
            <button id="btn_dresses">Dresses</button>
            <button id="btn_accessories">Accessories</button>
            <button class="button">check</button>
        </div>
        
        <article class="container">
            <div id="box1">
                <img id="dress_up_doll" src="../../src/img/dress_up_doll.png" alt="">
            </div>
            <div class="box" id="tops">
                <DressUpSetUp category="tops"/>
            </div>
            <div class="box" id="bottoms" >
                <DressUpSetUp category="bottoms"/>
            </div>
            <div class="box" id="dresses" >
                <DressUpSetUp category="dresses"/>
            </div>
             <div class="box none" id="accessories" >
                <DressUpSetUp category="accessories"/>
            </div>
        </article>
    </section>
</MainLayout>
  
<style>
    .navigation_container{
        display: flex;
        z-index: 1;
        width: 400px;
        gap:50px;
        background-color: aliceblue;
        margin:30px

    }

   
    .container{
        margin-top: 50px;
       height: 100vh;
       background-size: 4em 4em;
       display: grid;
       row-gap:100px;
       grid-template-columns: 1fr 4fr;
     }

     .none{
        display: none;
     }

     .flex_column{
        display: flex;
        flex-direction: column;
        background-color: rgb(218, 185, 221);
        padding-bottom: 300px;

     }

     .flex_row{
        display: flex;
        justify-content: space-between;
        padding-left: 20px;
        padding-right: 20px;
     }
       .box{
        position: relative;

       }

       .button{
        background-color: blueviolet;
        border: 2x black;
       }

    .cloth_cotainer{
        display: flex;
        flex-direction: column;
    }
.cloth_grid{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}
  #dress_up_doll{
    width: 400px;  }

    #card{
        width: 110px;
        height:110px;
        background: white;
        border-radius: black;
        position: absolute;
    }

    #tops{
        display:block
    }

    #bottoms{
        display:none
    }

    #dresses{
        display: none;
    }

    #accessories{
        display: none;
    }
</style>

<script>
 function isBoxOverlapping(box, card) {
        const rect1 = box.getBoundingClientRect();
        const rect2 = card.getBoundingClientRect();

        return !(rect1.right < rect2.left || 
                 rect1.left > rect2.right || 
                 rect1.bottom < rect2.top || 
                 rect1.top > rect2.bottom);
    }

function checkOverlap() {
    const box1 = document.getElementById('box1');
    const products = document.querySelectorAll('.card');

    // Iterate over all product cards
    products.forEach(product => {
        // Check if box1 and current card are overlapping
        if (isBoxOverlapping(box1, product)) {
            // Access the product ID and image using the id and src attributes
            const productId = product.getAttribute('id');
            const productImgSrc = product.querySelector('img').src;
            console.log('Box and card are overlapping. Product ID:', productId);

            // Display the product image inside the navigation_container div
            const navigationContainer = document.querySelector('.navigation_container');
            const productElement = document.createElement('div');
            productElement.innerHTML = `
                <img src="${productImgSrc}" alt="">
                <p>Product ID: ${productId}</p>
            `;
            navigationContainer.appendChild(productElement);
        }
    });
}


    // Add event listener for button click to trigger overlap check
    document.querySelector('.button').addEventListener('click', checkOverlap);

   function showCategory(categoryId) {
    
    // Hide all category elements
    document.querySelectorAll('.box').forEach(box => {
        box.style.display = 'none';
    });

    // Show the selected category element
    const categoryElement = document.getElementById(categoryId);
    if (categoryElement) {
        categoryElement.style.display = 'block';
    }

    
}

// Adding event listeners for button clicks
document.getElementById('btn_tops').addEventListener('click', () => showCategory('tops'));
document.getElementById('btn_bottoms').addEventListener('click', () => showCategory('bottoms'));
document.getElementById('btn_dresses').addEventListener('click', () => showCategory('dresses'));
document.getElementById('btn_accessories').addEventListener('click', () => showCategory('accessories'));
</script>

<!-- <script>
    let offsetX = 0, offsetY = 0;
    const card = document.getElementById('card');
    let isMoving = false;

    card.addEventListener("click", toggleMove)

  function toggleMove(e) {
        if (!isMoving) {
            // Start moving the card
            offsetX = e.clientX - card.offsetLeft;
            offsetY = e.clientY - card.offsetTop;
            document.addEventListener("mousemove", mouseMove);
            isMoving = true;
        } else {
            // Stop moving the card
            document.removeEventListener("mousemove", mouseMove);
            isMoving = false;
        }
    }

    function mouseMove(e){
        const newLeft = e.clientX - offsetX;
        const newTop = e.clientY - offsetY;
        card.style.left = newLeft + 'px';
        card.style.top = newTop + 'px';
    }
 
</script> -->


   <!--  <div class="container">
        <img id="dress_up_doll" src="../../src/img/dress_up_doll.png" alt="">
            <div class="cloth_cotainer">
                <div class="cloth_grid">
                        {
                        //For hver ITEM indeni array'et "items", så returnerer vi et Card med et enkelt ITEM som prop.
                        products.map((product) => {
                        if (product.category === "tops") {
                            return  <DressUpImg  src={product.image} />;
                        }
                        })
                    }
                </div>
                <div class="cloth_grid" >
                        {
                        //For hver ITEM indeni array'et "items", så returnerer vi et Card med et enkelt ITEM som prop.
                        products.map((product) => {
                        if (product.category === "bottoms") {
                            return  <DressUpImg  src={product.image} />;
                        }
                        })
                    }
                </div>
            </div>
    </div> -->