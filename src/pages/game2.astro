---
import MainLayout from "../layouts/MainLayout.astro"
import DressUpSetUp from "../components/game/DressUpSetUp.astro";



const data = await fetch("https://ujeckodeljhzamhwlhsj.supabase.co/rest/v1/products",
{
    method: "GET",
    headers: {
        apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVqZWNrb2RlbGpoemFtaHdsaHNqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTU1MDI3ODIsImV4cCI6MjAzMTA3ODc4Mn0.qKKBr9i_Jy2NzTfbu_jinScWs6PmGaBMoeK-1WHbmcU"
    }
  }).then((res) => res.json());

---
 
<MainLayout>
    <section>
        <div class="flex_column">
            <div class="flex_row">
                <button class="button">check</button>
                <button id="button">Get outfit</button>
                <button id="tops_btn">Tops</button>
                <button id="bottoms_btn">Bottoms</button>
                <button id="dresses_btn">Dresses</button>
                <button id="accessories_btn">Accessories</button>
            </div>
        </div>
        <article class="container">
            <div id="box1">
                <img id="dress_up_doll" src="../../src/img/dress_up_doll.png" alt="">
            </div>
            <div>
                <DressUpSetUp data={data} category="tops"/>
                <DressUpSetUp data={data} category="bottoms"/>
                <DressUpSetUp data={data} category="dresses"/>
                <DressUpSetUp data={data} category="accessories"/>
              
            </div>
        </article>
    </section> 
           <!--  <DressUpSetUp category="tops" />
            <DressUpSetUp category="bottoms" />
            <DressUpSetUp category="dresses" /> -->
        </div>
    </section> 
</MainLayout>

<style>
      #card{
        width: 110px;
        height:110px;
        background: white;
        border-radius: black;
        position: absolute;
    }

    img{
        width: 200px;
    }

     .cloth_grid{
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        row-gap:50px
    }

     .container{
        margin-top: 50px;
      
       display: grid;
       row-gap:100px;
       grid-template-columns: 1fr 4fr;
     }

     #dress_up_doll{
        width: 400px;
     }
     .flex_row{
        display: flex;
        justify-content: space-between;
        padding-left: 20px;
        padding-right: 20px;
     }
   
</style>

<script>
    function showCategory(category) {
        checkOverlap();

        const boxes = document.querySelectorAll(".box");
        for (const box of boxes) {
            const childElements = box.querySelectorAll(".container");
            childElements.forEach((element) => {
                //forestil dig at elementet har fÃ¥et class = "keep", hvis elementet overlapper med box1
                if(element.className.includes(category)) {
                    element.style.display = "block";
                } else if (element.className.includes("keep")) {
                    element.style.display = "block";
                } else {
                    element.style.display = "none";
                }
            });
        }

    }
    // Adding event listeners for button clicks
    document.getElementById('tops_btn').addEventListener('click', () => showCategory('tops'));
    document.getElementById('bottoms_btn').addEventListener('click', () => showCategory('bottoms'));
    document.getElementById('dresses_btn').addEventListener('click', () => showCategory('dresses'));
    document.getElementById('accessories_btn').addEventListener('click', () => showCategory('accessories'));

    //overlapping//
 function isBoxOverlapping(box, card) {
        const rect1 = box.getBoundingClientRect();
        const rect2 = card.getBoundingClientRect();

        return !(rect1.right < rect2.left || 
                 rect1.left > rect2.right || 
                 rect1.bottom < rect2.top || 
                 rect1.top > rect2.bottom);
    }

function checkOverlap() {
    const box1 = document.getElementById('box1');
    const products = document.querySelectorAll('.card');

    // Iterate over all product cards
    products.forEach(product => {
        // Check if box1 and current card are overlapping
        if (isBoxOverlapping(box1, product)) {
            // Access the product ID and image using the id and src attributes
            const productId = product.getAttribute('id');
            console.log('Box and card are overlapping. Product ID:', productId);
            product.parentNode.classList.add("keep");

        }
    });
}


    // Add event listener for button click to trigger overlap check
    document.querySelector('.button').addEventListener('click', checkOverlap);

</script>




